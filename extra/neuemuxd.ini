;
; Sample config file for neuemux.
;

[common]
; The list of object and extension namespaces we should claim to support when
; logging in. Note that the daemon will only include those which are
; explicitly mentioned in the initial greeting which are also listed below.
namespaces=
  urn:ietf:params:xml:ns:epp-1.0
  urn:ietf:params:xml:ns:domain-1.0
  urn:ietf:params:xml:ns:host-1.0
  urn:ietf:params:xml:ns:contact-1.0
  urn:ietf:params:xml:ns:secDNS-1.0
  urn:ietf:params:xml:ns:secDNS-1.1
  urn:ietf:params:xml:ns:e164epp-1.0
  urn:ietf:params:xml:ns:rgp-1.0
  http://www.verisign-grs.com/epp/namestoreExt-1.1

[server:verisign-core]
protocol=neuemux.protocols:epptls
host=epp.verisign-grs.net
port=700
username=username
password=password
certificate=%(here)s/certs/verisign.pem

; A pseudoserver derived from another. This is used in circumstances where you
; want to apply specific shims to modify requests and responses in specific
; ways.
;
; This one is intended to embed a specific kind of VeriSign NameStore
; extension element in requests.
[server:verisign-core-com]
_base=verisign-core
shims=namestore;product=dotCOM

; Here's another one which embeds a different kind of NameStore extension.
[server:verisign-core-net]
_base=verisign-core
shims=namestore:product=dotNET

;
; Shims
;
; There are currently three planned shim locations:
;
;  - client_request
;  - server_response
;  - server_greeting
;
; A shim is a callable takes a number of arguments and returns a callable that
; can be used to apply that shim. Thus a function that returns a function to
; apply that shim is a valid shim, as is a class with a `__call__` method.
; This lets the shim construct the datastructures it might need to work before
; it's applied.
;

; Name a shim function and specify where in the pipeline it's to be applied if
; assigned. This one sets up the shim for automatically adding a VeriSign
; NameStore extension.
[shim:namestore]
shim=neuemux.shims:make_apply_namestore
apply=client_request

; This particular shim is intended to fix the greeting document returned by
; Neustar's EPP servers to be more in line with what clients would expect.
[shim:neustar-greeting]
shim=neuemux.shims:make_fix_greeting_namespaces
apply=server_greeting

;
; Logging
;

[loggers]
keys=root

[handlers]
keys=default

[formatters]
keys=

[logger_root]
level=NOTSET
handlers=default

[handler_default]
class=StreamHandler
level=NOTSET
formatter=
args=(sys.stderr,)
